---
import { transactions, accounts, activities } from "../../../models/schema";
import { db } from "../../../utils/db";
import { sum, eq } from "drizzle-orm";
import type { ApexOptions } from "apexcharts";
import BaseChart from "../../charts/BaseChart.astro";

// Fetch run records
const runRecords = await db
  .select({
    id: activities.id,
    date: activities.start_date,
    distance: activities.distance,
    time: activities.elapsed_time,
  })
  .from(activities)
  .execute();

// Prepare the series data for the line chart
const seriesDataDistance = runRecords.map(run => ({
  x: new Date(run.date).getTime(), // Convert date to timestamp
  y: parseFloat(run.distance.toFixed(2)) // Fix distance to 2 decimal places
}));

const seriesDataTime = runRecords.map(run => ({
  x: new Date(run.date).getTime(), // Convert date to timestamp
  y: parseFloat((run.time / 60).toFixed(2)) // Convert time from minutes to hours and fix to 2 decimal places
}));

// Function to convert hours to hours and minutes
function formatTime(hours: number) {
  const hrs = Math.floor(hours);
  const mins = Math.round((hours - hrs) * 60);
  return `${hrs}h ${mins}m`;
}

// Chart options setup for dual-axis line chart
const chartOptions: ApexOptions = {
  series: [{
    name: "Distance (km)",
    data: seriesDataDistance,
    type: 'line'
  }, {
    name: "Time (minutes)",
    data: seriesDataTime,
    type: 'line'
  }],
  chart: {
    height: 350,
    type: "line",
    zoom: {
      enabled: true
    },
  },
  title: {
    text: 'Running Progress üèÉüèª',
    align: 'center',
    style: {
      fontSize: '18px',
      color: '#ffffff' // Adjust to your theme
    }
  },
  stroke: {
    width: 2,
    curve: 'smooth'
  },
  colors: ['#1f77b4', '#ff7f0e'], // Adjust colors to differentiate distance and time
  xaxis: {
    type: 'datetime',
    labels: {
      style: {
        colors: '#ffffff', // Adjust to your theme
      },
      formatter: function(val) {
        return new Date(val).toISOString().slice(0, 16).replace('T', ' '); // Fix x values to show date and time in readable format
      }
    },
  },
  yaxis: [{
    title: {
      text: 'Distance (km)',
      style: {
        color: '#1f77b4', // Adjust to your theme
      },
    },
    labels: {
      style: {
        colors: '#1f77b4', // Adjust to your theme
      },
      formatter: function(val) {
        return val.toFixed(2); // Fix y values to 2 decimal places
      }
    },
  }, {
    opposite: true,
    title: {
      text: 'Time (minutes)',
      style: {
        color: '#ff7f0e', // Adjust to your theme
      },
    },
    labels: {
      style: {
        colors: '#ff7f0e', // Adjust to your theme
      },
      formatter: function(val) {
        return val.toFixed(2); // Fix y values to 2 decimal places
      }
    },
  }],
  tooltip: {
    shared: true,
    intersect: false,
    y: {
      formatter: function(val, { seriesIndex }) {
        if (seriesIndex === 1) {
          return formatTime(val);
        }
        return val.toFixed(2); // Format to 2 decimal places
      }
    }
  },
  legend: {
    show: true,
    labels: {
      colors: '#ffffff', // Adjust to your theme
    },
  },
};

---
<BaseChart options={chartOptions} />

